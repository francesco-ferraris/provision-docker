---
- name: Provision environment
  hosts: localhost
  gather_facts: false
  vars:
    gcp_project: smarket-237213
    gcp_cred_kind: serviceaccount
    gcp_cred_file: /mnt/d/Offerte di lavoro/Kiratech/service-account-key.json
    zone: europe-west4-a
    region: europe-west4
    instances:
      - centos-1
      - centos-2
    public_ip: true

  tasks:
    - name: Provision CentOS instances
      include_role:
        name: create_gcp_centos_instances
      with_items:
        - "{{ instances }}"
      loop_control:
        loop_var: instance_name

    - name: Ingress firewall rules
      gcp_compute_firewall:
        name: allow-rules
        allowed:
          - ip_protocol: tcp
            ports:
              - "22"
              - "2377"
              - "7946"
          - ip_protocol: udp
            ports:
              - "7946"
              - "4789"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present


- name: Configure instances
  hosts: centos_instances
  become: true
  roles:
    - configure_instances
    - install_docker
    - configure_docker

- name: Get client certificates
  hosts: centos_instances
  become: true
  vars:
    client_cert_dest_folder: ~/.docker

  tasks:
    - name: Fetch client certificates
      fetch:
        src: /root/.docker/{{ item }}
        dest: "{{ client_cert_dest_folder }}"
      with_items:
        - ca.pem
        - cert.pem
        - key.pem

- name: Add to inventory
  hosts: localhost
  tasks:
    - name: Add host to swarm manager group
      add_host:
        name: "{{ hostvars[groups['centos_instances'][0]].ansible_hostname }}"
        groups:
          - docker-swarm-managers
        ansible_user: "{{ hostvars[groups['centos_instances'][0]].ansible_user }}"
        ansible_pipelining: false
        ansible_host: "{{ hostvars[groups['centos_instances'][0]].ansible_host }}"

    - name: Add host to swarm worker group
      add_host:
        name: "{{ hostvars[groups['centos_instances'][1]].ansible_hostname }}"
        groups:
          - docker-swarm-workers
        ansible_user: "{{ hostvars[groups['centos_instances'][1]].ansible_user }}"
        ansible_pipelining: false
        ansible_host: "{{ hostvars[groups['centos_instances'][1]].ansible_host }}"

- name: Configure Docker Swarm
  hosts: centos_instances
  become: true
  roles:
    - configure_docker_swarm

- name: Test Docker Swarm
  hosts: localhost

  tasks:

    - name: Check If Docker Is Installed
      command: docker --version
      changed_when: false
      register: docker_valid
      ignore_errors: yes

    - name: Test Docker Swarm service
      command: docker service create nginx
      register: output
      failed_when: output.rc != 0
      changed_when: false
      when: not docker_valid.failed
      environment:
        DOCKER_TLS_VERIFY: "1"
        DOCKER_HOST: "tcp://{{ hostvars[groups['docker-swarm-managers'][0]].ansible_hostname }}:2376"
        DOCKER_CERT_PATH: "{{ lookup('env', 'HOME') }}/.docker/{{ hostvars[groups['docker-swarm-managers'][0]].ansible_hostname }}/root/.docker"
